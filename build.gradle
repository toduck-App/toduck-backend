plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.ec4j.editorconfig' version '0.0.2'
    id 'checkstyle'
    id 'jacoco'
}

group = 'im.toduck'
version = '0.0.1-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    springCloudVersion = '2023.0.1'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    /* Boot */
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.3.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.1'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    /* Lombok */
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    /* Databases */
    runtimeOnly 'com.h2database:h2:2.2.224'
    runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'

    /* Redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.1'

    /* QueryDSL */
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /* Security */
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.1'
    testImplementation 'org.springframework.security:spring-security-test:6.2.3'

    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    /* findbugs */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation(group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0') {
        exclude group: 'org.webjars', module: 'swagger-ui'
    }
    implementation files('libs/swagger-ui-5.17.14.jar')

    /* Thymeleaf */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.3.1'

    /* CoolSMS */
    implementation 'net.nurigo:sdk:4.3.0'

    /* FCM */
    implementation 'com.google.firebase:firebase-admin:9.4.3'

    /* Feign */
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    /* test-containers */
    testImplementation "org.testcontainers:testcontainers:1.19.0"
    testImplementation "org.testcontainers:junit-jupiter:1.19.0"

    /* ArchUnit */
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.3.0'

    /* p6spy */
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.2'

    /* AWS S3 */
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'
}

// QueryDSL 설정
def querydslDir = "src/main/generated"

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [querydslDir]
}

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean.doLast {
    file(querydslDir).deleteDir()
}

// test 커버리지 측정용
tasks.named('test') {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

// editorconfig 설정
editorconfig {
    excludes = ['build', 'node_modules', '.husky', 'docker-infra', 'src/main/generated', 'gradlew.bat', 'toduck-backend-private/application.properties', 'src/main/resources/application.properties']
}
check.dependsOn editorconfigCheck

// checkstyle 설정
checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/rule-config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/rule-config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
    sourceSets = [sourceSets.main]
    ignoreFailures = false
}
checkstyleMain.source = fileTree('src/main/java')

// submodule 에서 민감정보 이동
tasks.register('copyPrivate', Copy) {
    from 'toduck-backend-private'
    include "*.properties", "*.json"
    into 'src/main/resources'
}
processResources.dependsOn('copyPrivate')

// springdoc-openapi-starter-webmvc 내부의 swagger-ui 가 아닌 직접 커스텀한 모듈을 사용하도록 duplicatesStrategy 변경합니다.
tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Jacoco 설정
jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
    }
}
